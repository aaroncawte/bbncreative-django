# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details

version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.7.0

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/postgres:10.5

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
            nodeenv -p --node=8.11.4
            npm install ava

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io

      - run:
          name: run tests
          command: |
            . venv/bin/activate
            python manage.py test
            npm test

      - store_artifacts:
          path: test-reports
          destination: test-reports

  deployment:
    steps:
      - add_ssh_keys:
          fingerprints:
            - "a3:e2:e1:16:45:1a:dd:fd:81:5d:31:18:a1:ff:cc:1c"
    dev:
      branch: Auto_Deploy_Test
      commands:
        - scp -r bbncreative-django $SSH_USER@$SSH_HOST:/home/aaron/Auto_Deploy_Test/website/"
        - sudo systemctl restart gunicorn
        - sudo nginx -t
        - sudo systemctl restart nginx

workflows:
  version: 2
  build-and-deploy-test:
    jobs:
      - build
      - deployment:
          requires:
            - build
