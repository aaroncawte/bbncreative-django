# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details

version: 2.0

workflows:
  version: 2
  build-and-deploy-test:
    jobs:
      - install

      - test:
          requires: 
            - install

      - build-deployment:
          filters:
            branches:
              only: Auto_Deploy_Test
          requires: 
            - install
            - test

      - deploy:
          filters:
            branches:
              only: Auto_Deploy_Test
          requires:
            - build-deployment

jobs:
  install:
    docker:
      # https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/python:3.7.0
      - image: circleci/postgres:10.5

    working_directory: ~/repo

    steps:

      - attach_workspace:
          at: ~/circleci-demo-workflows
      
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v2-dependencies-

      # Activate virtual environment and install project
      - run:
          name: Install Dependencies
          command: |
            python3 -m venv bbn-env
            . bbn-env/bin/activate
            pip install -r requirements.txt
            nodeenv -p --node=8.11.4
            npm install ava

      # Save everything to the workspace for deployment test
      - persist_to_workspace:
          root: .
          paths:
            - templates/

      # Cache dependencies using checksum of requirements.txt
      - save_cache:
          paths:
            - ./bbn-env
          key: v2-dependencies-{{ checksum "requirements.txt" }}

  test:
    docker:
      # https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/python:3.7.0
      - image: circleci/postgres:10.5

    working_directory: ~/repo
    
    steps:

      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v2-dependencies-

            # Run application tests
      - run:
          name: Run Tests
          command: |
            . bbn-env/bin/activate
            python manage.py test
            npm test

      # Store test reports
      - store_artifacts:
          path: test-reports
          destination: test-reports


  build-deployment:
    
    machine:
      enabled: true

    steps:

      # Refer to workspace defined in install step
      - attach_workspace:
        at: ~/test-deploy-workflow

      - run:
          name: Build Deployment
          command: |
            cd ~/test-deploy-workflow
            touch build_deploy_put_this_here.txt
            echo "This is where I will build my build deployment."
            echo "This is just to show multi-line is working"

      # Save build deployment to workspace
      - persist_to_workspace:
          root: .
          paths:
            - website/
      

  deploy:

    machine:
      enabled: true

    steps:

      # Server SSH key
      - add_ssh_keys:
          fingerprints:
            - "a3:e2:e1:16:45:1a:dd:fd:81:5d:31:18:a1:ff:cc:1c"

      # Refer to workspace defined in install step
      - attach_workspace:
          at: ~/test-deploy-workflow

      # Deployment test
      - run:
          name: Automatic Deployment Test
          command: |
            cd ~/test-deploy-workflow && ls -a
            # ssh $SSH_USER@$SSH_HOST "mkdir Auto_Deploy_Test && cd Auto_Deploy_Test && echo 'Hello world' >> test.txt"
